name: CI Pipeline HealthTrack

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-analyze:
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # ✅ Configurar JDK
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # ✅ Cache de dependencias Maven
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # ✅ Compilar backend
      - name: Build with Maven
        run: mvn -f backend/pom.xml clean install -DskipTests

      # ✅ Ejecutar pruebas unitarias
      - name: Run Unit Tests
        run: mvn -f backend/pom.xml test

      # ✅ Análisis con SonarCloud
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2.0.0
        with:
          args: >
            -Dsonar.projectKey=Clariveljn_EvaluacionM4
            -Dsonar.organization=clariveljn
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.projectBaseDir=backend

      # ✅ Instalar Google Chrome para Selenium
      - name: Install Google Chrome
        run: |
          sudo apt update
          sudo apt install -y wget
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb
          rm google-chrome-stable_current_amd64.deb

      # ✅ Ejecutar pruebas Selenium
      - name: Run Selenium Tests
        run: mvn -f pruebas-selenium/pom.xml test

      # ✅ Instalar JMeter
      - name: Install JMeter
        run: |
          sudo apt update
          sudo apt install -y jmeter

      # ✅ Ejecutar pruebas de rendimiento con JMeter
      - name: Run JMeter Test
        working-directory: pruebas-jmeter
        run: |
          jmeter -n -t healthtrack.jmx -l resultados.jtl -j jmeter.log

      # ✅ Subir resultados de JMeter como artefacto
      - name: Upload JMeter Results
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: pruebas-jmeter/resultados.jtl
