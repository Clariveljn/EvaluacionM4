name: CI Pipeline HealthTrack

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      # Clonar repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configurar JDK
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Cache Maven
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Build backend
      - name: Build backend
        run: mvn -f backend/pom.xml clean install -DskipTests

      # Ejecutar pruebas unitarias
      - name: Run Unit Tests
        run: mvn -f backend/pom.xml test

      # Instalar Google Chrome para Selenium
      - name: Install Google Chrome
        run: |
          sudo apt update
          sudo apt install -y wget
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb
          rm google-chrome-stable_current_amd64.deb

      # Ejecutar pruebas Selenium
      - name: Run Selenium Tests
        run: mvn -f pruebas-selenium/pom.xml test

      # Instalar JMeter
      - name: Install JMeter
        run: |
          sudo apt update
          sudo apt install -y jmeter

      # Ejecutar pruebas de rendimiento con JMeter
      - name: Run JMeter Test
        run: |
          jmeter -n -t pruebas-jmeter/healthtrack.jmx \
            -l pruebas-jmeter/resultados.jtl \
            -j pruebas-jmeter/jmeter.log

      # Subir resultados JMeter como artefacto
      - name: Upload JMeter Results
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: pruebas-jmeter/resultados.jtl





